openapi: 3.0.3
info:
  title: Course Selection
  version: 1.0.0
paths:
  /accounts/change-password-action/{uidb64}/{token}/:
    post:
      operationId: accounts_change_password_action_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordAction'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordAction'
          description: ''
  /accounts/change-password-request/:
    post:
      operationId: accounts_change_password_request_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordRequest'
          description: ''
  /accounts/login/token/:
    post:
      operationId: accounts_login_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /accounts/login/token/refresh/:
    post:
      operationId: accounts_login_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /accounts/logout/:
    post:
      operationId: accounts_logout_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logout'
          description: ''
  /accounts/professors/:
    get:
      operationId: accounts_professors_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfessorSerializerAllFieldsList'
          description: ''
    post:
      operationId: accounts_professors_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Professor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Professor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Professor'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
          description: ''
  /accounts/professors/{id}/:
    get:
      operationId: accounts_professors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessorSerializerAllFields'
          description: ''
    put:
      operationId: accounts_professors_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Professor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Professor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Professor'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
          description: ''
    patch:
      operationId: accounts_professors_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfessor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfessor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfessor'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
          description: ''
    delete:
      operationId: accounts_professors_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /accounts/students/:
    get:
      operationId: accounts_students_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentSerializerAllFieldsList'
          description: ''
    post:
      operationId: accounts_students_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /accounts/students/{id}/:
    get:
      operationId: accounts_students_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSerializerAllFields'
          description: ''
    put:
      operationId: accounts_students_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    patch:
      operationId: accounts_students_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    delete:
      operationId: accounts_students_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /apply/registration-update/:
    get:
      operationId: apply_registration_update_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - apply
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegistrationUpdateList'
          description: ''
    post:
      operationId: apply_registration_update_create
      tags:
      - apply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegistrationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegistrationUpdate'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationUpdate'
          description: ''
  /apply/registration-update/{id}/:
    get:
      operationId: apply_registration_update_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this registration update.
        required: true
      tags:
      - apply
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationUpdate'
          description: ''
    put:
      operationId: apply_registration_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this registration update.
        required: true
      tags:
      - apply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegistrationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegistrationUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationUpdate'
          description: ''
    patch:
      operationId: apply_registration_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this registration update.
        required: true
      tags:
      - apply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRegistrationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRegistrationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRegistrationUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationUpdate'
          description: ''
    delete:
      operationId: apply_registration_update_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this registration update.
        required: true
      tags:
      - apply
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /course/courses/:
    get:
      operationId: course_courses_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseList'
          description: ''
    post:
      operationId: course_courses_create
      tags:
      - course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /course/courses/{id}/:
    get:
      operationId: course_courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: course_courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: course_courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: course_courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /course/term-courses/:
    get:
      operationId: course_term_courses_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTermCourseList'
          description: ''
    post:
      operationId: course_term_courses_create
      tags:
      - course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TermCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TermCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TermCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermCourse'
          description: ''
  /course/term-courses/{id}/:
    get:
      operationId: course_term_courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this term course.
        required: true
      tags:
      - course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermCourse'
          description: ''
    put:
      operationId: course_term_courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this term course.
        required: true
      tags:
      - course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TermCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TermCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TermCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermCourse'
          description: ''
    patch:
      operationId: course_term_courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this term course.
        required: true
      tags:
      - course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTermCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTermCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTermCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermCourse'
          description: ''
    delete:
      operationId: course_term_courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this term course.
        required: true
      tags:
      - course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    ApprovalStatusEnum:
      enum:
      - E
      - P
      - A
      - D
      type: string
      description: |-
        * `E` - درحال انجام توسط دانشجو
        * `P` - منتظر نظر استاد
        * `A` - تایید شده
        * `D` - رد شده
    BlankEnum:
      enum:
      - ''
    ChangePasswordAction:
      type: object
      properties:
        new_password:
          type: string
      required:
      - new_password
    ChangePasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Course:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: نام درس
          maxLength: 50
        credits:
          type: integer
          title: تعداد واحد درس
        course_type:
          allOf:
          - $ref: '#/components/schemas/CourseTypeEnum'
          title: نوع درس
        faculty:
          type: integer
          title: دانشکده ارایه دهنده
        pre_requisite:
          type: array
          items:
            type: integer
            title: پیش نیازها
          title: پیش نیازها
        co_requisite:
          type: array
          items:
            type: integer
            title: هم نیازها
          title: هم نیازها
      required:
      - course_type
      - credits
      - faculty
      - id
      - name
    CourseTypeEnum:
      enum:
      - core
      - specialized
      - foundation
      - elective
      type: string
      description: |-
        * `core` - عمومی
        * `specialized` - تخصصی
        * `foundation` - پایه
        * `elective` - اختیاری
    DayEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      type: integer
      description: |-
        * `1` - شنبه
        * `2` - یکشنبه
        * `3` - دوشنبه
        * `4` - سه شنبه
        * `5` - چهارشنبه
        * `6` - پنجشنبه
        * `7` - جمعه
    EntryTermEnum:
      enum:
      - 1
      - 2
      type: integer
      description: |-
        * `1` - نیمه اول
        * `2` - نیمه دوم
    GenderEnum:
      enum:
      - M
      - F
      type: string
      description: |-
        * `M` - مرد
        * `F` - زن
    Logout:
      type: object
      properties:
        message:
          type: string
          default: Logout successful
    MilitaryServiceStatusEnum:
      enum:
      - SBJ
      - MEE
      - MES
      type: string
      description: |-
        * `SBJ` - مشمول
        * `MEE` - معافیت تحصیلی
        * `MES` - پایان خدمت
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        user_no:
          type: integer
          nullable: true
          title: شماره کاربری
        avatar:
          type: string
          format: uri
          nullable: true
          title: عکس پروفایل
        phone_number:
          type: string
          nullable: true
          title: شماره تلفن
          maxLength: 12
        national_code:
          type: string
          nullable: true
          title: کد ملی
          maxLength: 12
        gender:
          nullable: true
          title: جنسیت
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        birth_date:
          type: string
          format: date
          nullable: true
          title: تاریخ تولد
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - password
      - username
    NullEnum:
      enum:
      - null
    PaginatedCourseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Course'
    PaginatedProfessorSerializerAllFieldsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProfessorSerializerAllFields'
    PaginatedRegistrationUpdateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RegistrationUpdate'
    PaginatedStudentSerializerAllFieldsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentSerializerAllFields'
    PaginatedTermCourseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TermCourse'
    PatchedCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: نام درس
          maxLength: 50
        credits:
          type: integer
          title: تعداد واحد درس
        course_type:
          allOf:
          - $ref: '#/components/schemas/CourseTypeEnum'
          title: نوع درس
        faculty:
          type: integer
          title: دانشکده ارایه دهنده
        pre_requisite:
          type: array
          items:
            type: integer
            title: پیش نیازها
          title: پیش نیازها
        co_requisite:
          type: array
          items:
            type: integer
            title: هم نیازها
          title: هم نیازها
    PatchedProfessor:
      type: object
      properties:
        user_user_no:
          type: integer
          nullable: true
          title: شماره کاربری
          readOnly: true
        user_first_name:
          type: string
        user_last_name:
          type: string
        user_email:
          type: string
        user_phone_number:
          type: string
    PatchedRegistrationUpdate:
      type: object
      properties:
        add_courses:
          type: array
          items:
            type: integer
            title: دروس اضافه
          title: دروس اضافه
        del_courses:
          type: array
          items:
            type: integer
            title: دروس حذف
          title: دروس حذف
        approval_status:
          allOf:
          - $ref: '#/components/schemas/ApprovalStatusEnum'
          readOnly: true
          title: وضعیت تایید
    PatchedStudent:
      type: object
      properties:
        user_user_no:
          type: integer
          nullable: true
          title: شماره کاربری
          readOnly: true
        user_first_name:
          type: string
        user_last_name:
          type: string
        user_email:
          type: string
        user_phone_number:
          type: string
    PatchedTermCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        exam_date_time:
          type: string
          format: date-time
          title: زمان امتحان
        exam_venue:
          type: string
          title: مکان امتحان
          maxLength: 50
        capacity:
          type: integer
          title: ظرفیت درس
        time:
          type: string
          format: time
          title: زمان
        day:
          allOf:
          - $ref: '#/components/schemas/DayEnum'
          title: روز
        course:
          type: integer
          title: نام درس
        term:
          type: integer
          title: ترم تحصیلی
        professor:
          type: integer
          title: استاد درس
    Professor:
      type: object
      properties:
        user_user_no:
          type: integer
          nullable: true
          title: شماره کاربری
          readOnly: true
        user_first_name:
          type: string
        user_last_name:
          type: string
        user_email:
          type: string
        user_phone_number:
          type: string
      required:
      - user_email
      - user_first_name
      - user_last_name
      - user_phone_number
      - user_user_no
    ProfessorSerializerAllFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        faculty:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        field_of_study:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        expertise:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        degree:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        past_teaching_courses:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - degree
      - expertise
      - faculty
      - field_of_study
      - id
      - past_teaching_courses
      - user
    RegistrationUpdate:
      type: object
      properties:
        add_courses:
          type: array
          items:
            type: integer
            title: دروس اضافه
          title: دروس اضافه
        del_courses:
          type: array
          items:
            type: integer
            title: دروس حذف
          title: دروس حذف
        approval_status:
          allOf:
          - $ref: '#/components/schemas/ApprovalStatusEnum'
          readOnly: true
          title: وضعیت تایید
      required:
      - approval_status
    Student:
      type: object
      properties:
        user_user_no:
          type: integer
          nullable: true
          title: شماره کاربری
          readOnly: true
        user_first_name:
          type: string
        user_last_name:
          type: string
        user_email:
          type: string
        user_phone_number:
          type: string
      required:
      - user_email
      - user_first_name
      - user_last_name
      - user_phone_number
      - user_user_no
    StudentSerializerAllFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        entry_year:
          type: string
          format: date
          title: سال ورودی
        entry_term:
          allOf:
          - $ref: '#/components/schemas/EntryTermEnum'
          title: ترم ورودی
        gpa:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,3})?$
          title: معدل
        military_service_status:
          allOf:
          - $ref: '#/components/schemas/MilitaryServiceStatusEnum'
          title: وضعیت نظام وظیفه
        academic_years:
          type: integer
          title: سنوات
        user:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        faculty:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        field_of_study:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        supervisor:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        courses_passed:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
        courses_taken:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - academic_years
      - courses_passed
      - courses_taken
      - entry_term
      - entry_year
      - faculty
      - field_of_study
      - gpa
      - id
      - military_service_status
      - supervisor
      - user
    TermCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        exam_date_time:
          type: string
          format: date-time
          title: زمان امتحان
        exam_venue:
          type: string
          title: مکان امتحان
          maxLength: 50
        capacity:
          type: integer
          title: ظرفیت درس
        time:
          type: string
          format: time
          title: زمان
        day:
          allOf:
          - $ref: '#/components/schemas/DayEnum'
          title: روز
        course:
          type: integer
          title: نام درس
        term:
          type: integer
          title: ترم تحصیلی
        professor:
          type: integer
          title: استاد درس
      required:
      - capacity
      - course
      - day
      - exam_date_time
      - exam_venue
      - id
      - professor
      - term
      - time
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
